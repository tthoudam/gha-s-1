name: Terraform Resuable Workflow
on:
  workflow_call:
    inputs:
      command:
        description: "The terraform command to run plan|apply"
        required: true
        type: string
      work_dir:
        description: "The terraform root directory"
        required: true
        type: string
        default: "."
      project_id:
        description: "Google Cloud Project ID"
        required: true
        type: string
      workload_identity_provider:
        description: "Google cloud workload identity provider"
        required: true
        type: string
      service_account:
        description: "The GCP service account to assume"
        required: true
        type: string
    secrets:
      TF_API_TOKEN:
        required: true

jobs:
  workflow_call:
    runs-on: ubuntu-latest
    steps:
      - name: Validate input
        run: |
          case "${{ inputs.command }}" in (plan|apply)
              echo "Running valid command: ${{ inputs.command }}"
              ;;
            *)
              echo "Invalid command: '${{ inputs.command }}'. Allowed: plan, apply"
              exit 1
              ;;
          esac
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud using Workload Identity Federation
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          project_id: ${{ inputs.project_id }}
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform ${{ inputs.command }}
        run: |
          if [ "${{ inputs.command }}" = "apply" ]; then
            terraform ${{ inputs.command }} -auto-approve -input=false
          else
            terraform ${{ inputs.command }} -input=false
          fi
        working-directory: ${{ inputs.work_dir }} 
